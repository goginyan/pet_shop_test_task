openapi: 3.0.0
info:
  title: PetShop API
  version: 0.1.9
servers:
  - url: http://127.0.0.1:8000/api/v1
    description: local server
  - url: http://producation.app/api/v1
    description: production server
paths:

  /admin/login:
    post:
      summary: Log in as admin
      tags:
        - Admin
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      responses:
        200:
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuth'
        401:
          $ref: '#/components/responses/Unauthorized'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /admin/logout:
    get:
      summary: Log out as admin
      tags:
        - Admin
      security:
        - bearerAuth: [ ]
      responses:
        200:
          $ref: '#/components/responses/Success'

  /admin/create:
    post:
      summary: Register new user with admin rights
      tags:
        - Admin
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        201:
          description: New admin user created

  /admin/user-listing:
    get:
      summary: Returns JSON array of all non-admin users
      tags:
        - Admin
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: JSON array of all non-admin users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
        500:
          description: Internal Server Error

  /admin/user-edit/{uuid}:
    put:
      summary: Edit user as admin
      tags:
        - Admin
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        402:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /admin/user-delete/{uuid}:
    delete:
      summary: Edit user as admin
      tags:
        - Admin
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          description: Internal Server Error

  /user/login:
    post:
      summary: Log in as user
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      responses:
        200:
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuth'
        401:
          $ref: '#/components/responses/Unauthorized'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /user/logout:
    get:
      summary: Log out
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          $ref: '#/components/responses/Success'

  /user/create:
    post:
      summary: Register new user
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /user/edit:
    put:
      summary: Edit current user
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /user/delete:
    delete:
      summary: Delete current user's account
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          $ref: '#/components/responses/Success'

  /user/orders:
    get:
      summary: Returns JSON array of current user's orders
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: JSON array of current user's orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersList'
        500:
          description: Internal Server Error

  /brands:
    get:
      summary: Returns a list of brands.
      tags:
        - Brands
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: A JSON array of brands
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandsList'

  /brand/create:
    post:
      summary: Create a new brand
      tags:
        - Brands
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/BrandRequest'
      responses:
        201:
          description: Brand created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error


  /brand/{uuid}:
    get:
      summary: Get brand by UUID
      tags:
        - Brands
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: Object Brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
    put:
      summary: Edit brand
      tags:
        - Brands
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/BrandRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

    delete:
      summary: Delete brand
      tags:
        - Brands
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          description: Brand not found
        500:
          description: Internal Server Error


  /categories:
    get:
      summary: Returns a list of all product categories with products
      tags:
        - Categories
      security:
        - bearerAuth: [ ]
      responses:
        200 :
          description: A JSON array of categories with products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesList'

  /category/create:
    post:
      summary: Create a new category
      tags:
        - Categories
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/CategoryRequest'
      responses:
        201:
          description: Category created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal server error

  /category/{uuid}:
    get:
      summary: Get category by UUID
      tags:
        - Categories
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: Category with products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

    put:
      summary: Edit category
      tags:
        - Categories
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/CategoryRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal server error

    delete:
      summary: Delete a category
      tags:
        - Categories
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'

  /orders:
    get:
      summary: Retusns JSON array of orders
      tags:
        - Orders
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: JSON array of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersList'

  /order/create:
    post:
      summary: Create a new order
      tags:
        - Orders
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        201:
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal server error

  /order/{uuid}:
    get:
      summary: Get order by UUID
      tags:
        - Orders
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: Order object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          $ref: '#/components/responses/NotFound'

    put:
      summary: Edit order
      tags:
        - Orders
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

    delete:
      summary: Delete order
      tags:
        - Orders
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error

  /order-statuses:
    get:
      summary: Retuns JSON array of order statuses with orders
      tags:
        - Order statuses
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: JSON array of order statuses with orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatusesList'

  /order-status/create:
    post:
      summary: Create new order status
      tags:
        - Order statuses
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/OrderStatusRequest'
      responses:
        201:
          description: Order status created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /order-status/{uuid}:
    get:
      summary: Get order status with orders by UUID
      tags:
        - Order statuses
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: Order status object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderStatus"
        404:
          $ref: '#/components/responses/NotFound'

    put:
      summary: Edit order status
      tags:
        - Order statuses
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/OrderStatusRequest'
      responses:
        200:
          description: Order status object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderStatus"
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

    delete:
      summary: Delete order status
      tags:
        - Order statuses
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error

  /payments:
    get:
      summary: Returns JSON array of payments with order
      tags:
        - Payments
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: JSON array of payments with order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsList'

  /payments/create:
    post:
      summary: Create a new payment
      tags:
        - Payments
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: "#/components/requestBodies/PaymentRequest"
      responses:
        201:
          description: Payment created
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /payments/{uuid}:
    get:
      summary: Get payment by UUID
      tags:
        - Payments
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: Payment object with order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error

    put:
      summary: Update payment
      tags:
        - Payments
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: "#/components/requestBodies/PaymentRequest"
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

    delete:
      summary: Delete payment
      tags:
        - Payments
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error

  /products:
    get:
      summary: Returns JSON array of products with categories
      tags:
        - Products
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: A JSON array of products with categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsList'

  /product/create:
    post:
      summary: Create a product
      tags:
        - Products
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: '#/components/requestBodies/ProductRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

  /product/{uuid}:
    get:
      summary: Get product by UUID
      tags:
        - Products
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          description: A Product object with categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error

    put:
      summary: Edit product
      tags:
        - Products
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        $ref: '#/components/requestBodies/ProductRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableContent'
        500:
          description: Internal Server Error

    delete:
      summary: Deletes a product by UUID
      tags:
        - Products
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: Internal Server Error



components:
  schemas:

    UserAuth:
      title: UserAuth
      type: object
      properties:
        status:
          type: string
          example: success
        user:
          type: object
          properties:
            id:
              type: integer
              minimum: 1
            uuid:
              type: string
              example: a787157c-762f-3f61-a104-27f1d09d76e4
            first_name:
              type: string
            last_name:
              type: string
            is_admin:
              type: integer
              minimum: 0
              maximum: 1
            email:
              type: string
            email_verified_at:
              type: string
              format: date-time
              nullable: true
            avatar:
              type: string
              nullable: true
            phone_number:
              type: string
            is_marketing:
              type: integer
              minimum: 0
              maximum: 1
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            last_logged_in:
              type: string
              format: date-time
              nullable: true
        authorisation:
          type: object
          properties:
            token:
              type: string
            type:
              type: string
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: a787157c-762f-3f61-a104-27f1d09d76e4
        first_name:
          type: string
        last_name:
          type: string
        is_admin:
          type: integer
          minimum: 0
          maximum: 1
        email:
          type: string
        email_verified_at:
          type: string
          format: date-time
          nullable: true
        avatar:
          type: string
          nullable: true
        phone_number:
          type: string
        is_marketing:
          type: integer
          minimum: 0
          maximum: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_logged_in:
          type: string
          format: date-time
          nullable: true
    UsersList:
      title: UsersList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: a787157c-762f-3f61-a104-27f1d09d76e4
          first_name:
            type: string
          last_name:
            type: string
          is_admin:
            type: integer
            minimum: 0
            maximum: 1
          email:
            type: string
          email_verified_at:
            type: string
            format: date-time
            nullable: true
          avatar:
            type: string
            nullable: true
          phone_number:
            type: string
          is_marketing:
            type: integer
            minimum: 0
            maximum: 1
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          last_logged_in:
            type: string
            format: date-time
            nullable: true

    Brand:
      title: Brand
      properties:
        id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: 3ef8ea4d-8e62-3257-9171-ea736d54aa03
        title:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BrandsList:
      title: BrandsList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: 3ef8ea4d-8e62-3257-9171-ea736d54aa03
          title:
            type: string
          slug:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time

    Category:
      title: Category
      properties:
        id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
        title:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        products:
          type: object
          properties:
            id:
              type: integer
              minimum: 1
            category_uuid:
              type: string
              example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
            uuid:
              type: string
              example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
            title:
              type: string
            price:
              type: number
              example: 0.00
            description:
              type: string
            metadata:
              type: object
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
              nullable: true
    CategoriesList:
      title: CategoriesList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
          title:
            type: string
          slug:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          products:
            type: object
            properties:
              id:
                type: integer
                minimum: 1
              category_uuid:
                type: string
                example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
              uuid:
                type: string
                example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
              title:
                type: string
              price:
                type: number
                example: 0.00
              description:
                type: string
              metadata:
                type: object
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              deleted_at:
                type: string
                format: date-time
                nullable: true

    Payment:
      title: Payment
      properties:
        id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: 38370f32-7e64-3457-a901-9faebffa8037
        type:
          type: string
          enum: [ 'credit_card', 'cash_on_delivery', 'bank_transfer' ]
        details:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaymentsList:
      title: PaymentsList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: 38370f32-7e64-3457-a901-9faebffa8037
          type:
            type: string
            enum: [ 'credit_card', 'cash_on_delivery', 'bank_transfer' ]
          details:
            type: object
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time

    Product:
      title: Product
      properties:
        id:
          type: integer
          minimum: 1
        category_uuid:
          type: string
          example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
        uuid:
          type: string
          example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
        title:
          type: string
        price:
          type: number
          example: 0.00
        description:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true
    ProductsList:
      title: ProductsList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          category_uuid:
            type: string
            example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
          uuid:
            type: string
            example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
          title:
            type: string
          price:
            type: number
            example: 0.00
          description:
            type: string
          metadata:
            type: object
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          deleted_at:
            type: string
            format: date-time
            nullable: true

    OrderStatus:
      title: OrderStatus
      properties:
        id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: a87d6306-852a-3ff8-b485-2ac83ca723d6
        title:
          type: string
          enum: [ 'New', 'In progress', 'Shipped', 'Delivered', 'Cancelled' ]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        orders:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                minimum: 1
              category_uuid:
                type: string
                example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
              uuid:
                type: string
                example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
              title:
                type: string
              price:
                type: number
                example: 0.00
              description:
                type: string
              metadata:
                type: object
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              deleted_at:
                type: string
                format: date-time
                nullable: true
    OrderStatusesList:
      title: OrderStatusesList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: a87d6306-852a-3ff8-b485-2ac83ca723d6
          title:
            type: string
            enum: [ 'New', 'In progress', 'Shipped', 'Delivered', 'Cancelled' ]
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          orders:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  minimum: 1
                category_uuid:
                  type: string
                  example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
                uuid:
                  type: string
                  example: 11aa59c2-cd9b-3017-872c-584a8b0ce014
                title:
                  type: string
                price:
                  type: number
                  example: 0.00
                description:
                  type: string
                metadata:
                  type: object
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                deleted_at:
                  type: string
                  format: date-time
                  nullable: true

    Order:
      title: Order
      properties:
        id:
          type: integer
          minimum: 1
        user_id:
          type: integer
          minimum: 1
        order_status_id:
          type: integer
          minimum: 1
        payment_id:
          type: integer
          minimum: 1
        uuid:
          type: string
          example: 221c8ba8-c0d4-3af1-a683-dc7bc3713e56
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: integer
                minimum: 1
              quantity:
                type: integer
                minimum: 1
        address:
          type: object
          properties:
            billing:
              type: string
            shipping:
              type: string
        amount:
          type: number
          example: 0.00
        delivery_fee:
          type: number
          example: 0.00
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        shipped_at:
          type: string
          format: date-time
          nullable: true
    OrdersList:
      title: OrdersList
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          user_id:
            type: integer
            minimum: 1
          order_status_id:
            type: integer
            minimum: 1
          payment_id:
            type: integer
            minimum: 1
          uuid:
            type: string
            example: 221c8ba8-c0d4-3af1-a683-dc7bc3713e56
          products:
            type: array
            items:
              type: object
              properties:
                product:
                  type: integer
                  minimum: 1
                quantity:
                  type: integer
                  minimum: 1
          address:
            type: object
            properties:
              billing:
                type: string
              shipping:
                type: string
          amount:
            type: number
            example: 0.00
          delivery_fee:
            type: number
            example: 0.00
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          shipped_at:
            type: string
            format: date-time
            nullable: true
  parameters:
    uuid:
      in: path
      name: uuid
      schema:
        type: string
        example: a37af3ba-5c68-31aa-8ab3-21dd80c36aea
      required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:

    LoginRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: string1@exampl.com
              password:
                type: string

    UserRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
              avatar:
                type: string
                nullable: true
              phone_number:
                type: string
              is_marketing:
                type: integer
                minimum: 0
                maximum: 1

    BrandRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              slug:
                type: string

    CategoryRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              slug:
                type: string

    PaymentRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                enum: [
                  'credit_card',
                  'cash_on_delivery',
                  'bank_transfer',
                ]
              details:
                type: object

    ProductRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              category_uuid:
                type: string
                example: 6ea7e115-9f72-305f-88e1-7549c6c16a48
              title:
                type: string
              price:
                type: number
                example: 0.00
              description:
                type: string
              metadata:
                type: object

    OrderStatusRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string

    OrderRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: integer
                minimum: 1
              payment_id:
                type: integer
                minimum: 1
              order_status_id:
                type: integer
                minimum: 1
              products:
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: integer
                      minimum: 1
                    quantity:
                      type: integer
                      minimum: 1
              address:
                type: object
                properties:
                  billing:
                    type: string
                  shipping:
                    type: string
              amount:
                type: number
                example: 0.00
              delivery_fee:
                type: number
                example: 0.00
  responses:
    Success:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
                example: Unauthorized
    UnprocessableContent:
      description: Unprocessable Content (validation error)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: string

